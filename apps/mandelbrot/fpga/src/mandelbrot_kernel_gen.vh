// Generated by SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA.
// (Installed here: /home/steve/mono/sandpiper/distro.)
// Redwood EDA does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


`include "sandpiper_gen.vh"


genvar pe;


//
// Scope: |pipe
//

// For |pipe$all_pix_done.
logic PIPE_all_pix_done_a4;

// For |pipe$config_data_bogus.
logic [63:0] PIPE_config_data_bogus_n1;

// For |pipe$config_data_min_x.
logic [63:0] PIPE_config_data_min_x_n1,
             PIPE_config_data_min_x_a0;

// For |pipe$config_data_min_y.
logic [63:0] PIPE_config_data_min_y_n1,
             PIPE_config_data_min_y_a0;

// For |pipe$config_data_pix_x.
logic [63:0] PIPE_config_data_pix_x_n1,
             PIPE_config_data_pix_x_a0;

// For |pipe$config_data_pix_y.
logic [63:0] PIPE_config_data_pix_y_n1,
             PIPE_config_data_pix_y_a0;

// For |pipe$config_img_size_x.
logic [63:0] PIPE_config_img_size_x_n1;
logic [31:0] PIPE_config_img_size_x_a0;

// For |pipe$config_img_size_y.
logic [63:0] PIPE_config_img_size_y_n1;
logic [31:0] PIPE_config_img_size_y_a0;

// For |pipe$config_max_depth.
logic [63:0] PIPE_config_max_depth_n1;
logic [31:0] PIPE_config_max_depth_a0;

// For |pipe$done_frame.
logic PIPE_done_frame_a4,
      PIPE_done_frame_a5,
      PIPE_done_frame_a6,
      PIPE_done_frame_a7,
      PIPE_done_frame_a8,
      PIPE_done_frame_a9,
      PIPE_done_frame_a10;

// For |pipe$done_pixels.
logic PIPE_done_pixels_a4;

// For |pipe$frame_active.
logic PIPE_frame_active_a0,
      PIPE_frame_active_a1;

// For |pipe$in_avail.
logic PIPE_in_avail_n1;

// For |pipe$in_data.
logic [C_DATA_WIDTH-1:0] PIPE_in_data_n1;

// For |pipe$in_ready.
logic PIPE_in_ready_n1;

// For |pipe$init_pixels.
logic PIPE_init_pixels_a0;

// For |pipe$max_depth.
logic [31:0] PIPE_max_depth_a0,
             PIPE_max_depth_a1,
             PIPE_max_depth_a2,
             PIPE_max_depth_a3;

// For |pipe$min_x.
logic [3:-29] PIPE_min_x_a0,
              PIPE_min_x_a1,
              PIPE_min_x_a2;

// For |pipe$min_y.
logic [3:-29] PIPE_min_y_a0,
              PIPE_min_y_a1,
              PIPE_min_y_a2;

// For |pipe$out_avail.
logic PIPE_out_avail_a4;

// For |pipe$out_data.
logic [C_DATA_WIDTH-1:0] PIPE_out_data_a4;

// For |pipe$out_ready.
logic PIPE_out_ready_a4;

// For |pipe$out_valid.
logic PIPE_out_valid_a4;

// For |pipe$pix_x.
logic [3:-39] PIPE_pix_x_a0,
              PIPE_pix_x_a1;
logic [2:-39] PIPE_pix_x_a2;

// For |pipe$pix_y.
logic [3:-39] PIPE_pix_y_a0,
              PIPE_pix_y_a1;
logic [2:-39] PIPE_pix_y_a2;

// For |pipe$reset.
logic PIPE_reset_n2,
      PIPE_reset_n1,
      PIPE_reset_a0,
      PIPE_reset_a1,
      PIPE_reset_a2,
      PIPE_reset_a3,
      PIPE_reset_a4;

// For |pipe$size_x.
logic [3:-29] PIPE_size_x_a0,
              PIPE_size_x_a1;

// For |pipe$size_y.
logic [3:-29] PIPE_size_y_a0,
              PIPE_size_y_a1;

// For |pipe$start_frame.
logic PIPE_start_frame_a0;

// For |pipe$valid_config_data_in.
logic PIPE_valid_config_data_in_n1,
      PIPE_valid_config_data_in_a0;

//
// Scope: |pipe/pe[15:0]
//

// For |pipe/pe$aa.
logic [3:-29] PIPE_Pe_aa_a2 [15:0],
              PIPE_Pe_aa_a3 [15:0];

// For |pipe/pe$aa_sq.
logic [3:-29] PIPE_Pe_aa_sq_a3 [15:0];

// For |pipe/pe$aa_sq_minus_bb_sq.
logic [3:-29] PIPE_Pe_aa_sq_minus_bb_sq_a3 [15:0];

// For |pipe/pe$aa_sq_plus_bb_sq.
logic [3:-29] PIPE_Pe_aa_sq_plus_bb_sq_a3 [15:0];

// For |pipe/pe$aa_times_bb.
logic [3:-29] PIPE_Pe_aa_times_bb_a3 [15:0];

// For |pipe/pe$aa_times_bb_times_2.
logic [3:-29] PIPE_Pe_aa_times_bb_times_2_a3 [15:0];

// For |pipe/pe$bb.
logic [3:-29] PIPE_Pe_bb_a2 [15:0],
              PIPE_Pe_bb_a3 [15:0];

// For |pipe/pe$bb_sq.
logic [3:-29] PIPE_Pe_bb_sq_a3 [15:0];

// For |pipe/pe$calc_valid.
logic PIPE_Pe_calc_valid_a3 [15:0],
      PIPE_Pe_calc_valid_a4 [15:0];

// For |pipe/pe$depth.
logic [15:0] PIPE_Pe_depth_a0 [15:0],
             PIPE_Pe_depth_a1 [15:0],
             PIPE_Pe_depth_a2 [15:0],
             PIPE_Pe_depth_a3 [15:0];

// For |pipe/pe$depth_out.
logic [15:0] [7:0] PIPE_Pe_depth_out_a3,
                   PIPE_Pe_depth_out_a4;

// For |pipe/pe$done_pix.
logic [15:0] PIPE_Pe_done_pix_a3,
             PIPE_Pe_done_pix_a4;

// For |pipe/pe$done_pix_pulse.
logic PIPE_Pe_done_pix_pulse_a3 [15:0];

// For |pipe/pe$init_pix.
logic PIPE_Pe_init_pix_a0 [15:0],
      PIPE_Pe_init_pix_a1 [15:0],
      PIPE_Pe_init_pix_a2 [15:0],
      PIPE_Pe_init_pix_a3 [15:0],
      PIPE_Pe_init_pix_a4 [15:0];

// For |pipe/pe$last_h.
logic [15:0] PIPE_Pe_last_h_a1,
             PIPE_Pe_last_h_a2,
             PIPE_Pe_last_h_a3,
             PIPE_Pe_last_h_a4;

// For |pipe/pe$last_v.
logic [15:0] PIPE_Pe_last_v_a1,
             PIPE_Pe_last_v_a2,
             PIPE_Pe_last_v_a3,
             PIPE_Pe_last_v_a4;

// For |pipe/pe$pix_h.
logic [31:0] PIPE_Pe_pix_h_a0 [15:0],
             PIPE_Pe_pix_h_a1 [15:0],
             PIPE_Pe_pix_h_a2 [15:0];

// For |pipe/pe$pix_v.
logic [31:0] PIPE_Pe_pix_v_a0 [15:0],
             PIPE_Pe_pix_v_a1 [15:0],
             PIPE_Pe_pix_v_a2 [15:0];

// For |pipe/pe$reset.
logic PIPE_Pe_reset_a0 [15:0],
      PIPE_Pe_reset_a1 [15:0],
      PIPE_Pe_reset_a2 [15:0],
      PIPE_Pe_reset_a3 [15:0];

// For |pipe/pe$xx.
logic [3:-29] PIPE_Pe_xx_a2 [15:0],
              PIPE_Pe_xx_a3 [15:0];

// For |pipe/pe$xx_mul.
logic [2:-39] PIPE_Pe_xx_mul_a2 [15:0];

// For |pipe/pe$yy.
logic [3:-29] PIPE_Pe_yy_a2 [15:0],
              PIPE_Pe_yy_a3 [15:0];

// For |pipe/pe$yy_mul.
logic [2:-39] PIPE_Pe_yy_mul_a2 [15:0];


generate


   //
   // Scope: |pipe
   //

      // For $config_data_min_x.
      always_ff @(posedge clk) PIPE_config_data_min_x_a0[63:0] <= PIPE_config_data_min_x_n1[63:0];

      // For $config_data_min_y.
      always_ff @(posedge clk) PIPE_config_data_min_y_a0[63:0] <= PIPE_config_data_min_y_n1[63:0];

      // For $config_data_pix_x.
      always_ff @(posedge clk) PIPE_config_data_pix_x_a0[63:0] <= PIPE_config_data_pix_x_n1[63:0];

      // For $config_data_pix_y.
      always_ff @(posedge clk) PIPE_config_data_pix_y_a0[63:0] <= PIPE_config_data_pix_y_n1[63:0];

      // For $config_img_size_x.
      always_ff @(posedge clk) PIPE_config_img_size_x_a0[31:0] <= PIPE_config_img_size_x_n1[31:0];

      // For $config_img_size_y.
      always_ff @(posedge clk) PIPE_config_img_size_y_a0[31:0] <= PIPE_config_img_size_y_n1[31:0];

      // For $config_max_depth.
      always_ff @(posedge clk) PIPE_config_max_depth_a0[31:0] <= PIPE_config_max_depth_n1[31:0];

      // For $done_frame.
      always_ff @(posedge clk) PIPE_done_frame_a5 <= PIPE_done_frame_a4;
      always_ff @(posedge clk) PIPE_done_frame_a6 <= PIPE_done_frame_a5;
      always_ff @(posedge clk) PIPE_done_frame_a7 <= PIPE_done_frame_a6;
      always_ff @(posedge clk) PIPE_done_frame_a8 <= PIPE_done_frame_a7;
      always_ff @(posedge clk) PIPE_done_frame_a9 <= PIPE_done_frame_a8;
      always_ff @(posedge clk) PIPE_done_frame_a10 <= PIPE_done_frame_a9;

      // For $frame_active.
      always_ff @(posedge clk) PIPE_frame_active_a1 <= PIPE_frame_active_a0;

      // For $max_depth.
      always_ff @(posedge clk) PIPE_max_depth_a1[31:0] <= PIPE_max_depth_a0[31:0];
      always_ff @(posedge clk) PIPE_max_depth_a2[31:0] <= PIPE_max_depth_a1[31:0];
      always_ff @(posedge clk) PIPE_max_depth_a3[31:0] <= PIPE_max_depth_a2[31:0];

      // For $min_x.
      always_ff @(posedge clk) PIPE_min_x_a1[3:-29] <= PIPE_min_x_a0[3:-29];
      always_ff @(posedge clk) PIPE_min_x_a2[3:-29] <= PIPE_min_x_a1[3:-29];

      // For $min_y.
      always_ff @(posedge clk) PIPE_min_y_a1[3:-29] <= PIPE_min_y_a0[3:-29];
      always_ff @(posedge clk) PIPE_min_y_a2[3:-29] <= PIPE_min_y_a1[3:-29];

      // For $pix_x.
      always_ff @(posedge clk) PIPE_pix_x_a1[3:-39] <= PIPE_pix_x_a0[3:-39];
      always_ff @(posedge clk) PIPE_pix_x_a2[2:-39] <= PIPE_pix_x_a1[2:-39];

      // For $pix_y.
      always_ff @(posedge clk) PIPE_pix_y_a1[3:-39] <= PIPE_pix_y_a0[3:-39];
      always_ff @(posedge clk) PIPE_pix_y_a2[2:-39] <= PIPE_pix_y_a1[2:-39];

      // For $reset.
      always_ff @(posedge clk) PIPE_reset_n1 <= PIPE_reset_n2;
      always_ff @(posedge clk) PIPE_reset_a0 <= PIPE_reset_n1;
      always_ff @(posedge clk) PIPE_reset_a1 <= PIPE_reset_a0;
      always_ff @(posedge clk) PIPE_reset_a2 <= PIPE_reset_a1;
      always_ff @(posedge clk) PIPE_reset_a3 <= PIPE_reset_a2;
      always_ff @(posedge clk) PIPE_reset_a4 <= PIPE_reset_a3;

      // For $size_x.
      always_ff @(posedge clk) PIPE_size_x_a1[3:-29] <= PIPE_size_x_a0[3:-29];

      // For $size_y.
      always_ff @(posedge clk) PIPE_size_y_a1[3:-29] <= PIPE_size_y_a0[3:-29];

      // For $valid_config_data_in.
      always_ff @(posedge clk) PIPE_valid_config_data_in_a0 <= PIPE_valid_config_data_in_n1;


      //
      // Scope: /pe[15:0]
      //
      for (pe = 0; pe <= 15; pe++) begin : L1gen_PIPE_Pe
         // For $aa.
         always_ff @(posedge clk) PIPE_Pe_aa_a3[pe][3:-29] <= PIPE_Pe_aa_a2[pe][3:-29];

         // For $bb.
         always_ff @(posedge clk) PIPE_Pe_bb_a3[pe][3:-29] <= PIPE_Pe_bb_a2[pe][3:-29];

         // For $calc_valid.
         always_ff @(posedge clk) PIPE_Pe_calc_valid_a4[pe] <= PIPE_Pe_calc_valid_a3[pe];

         // For $depth.
         always_ff @(posedge clk) PIPE_Pe_depth_a1[pe][15:0] <= PIPE_Pe_depth_a0[pe][15:0];
         always_ff @(posedge clk) PIPE_Pe_depth_a2[pe][15:0] <= PIPE_Pe_depth_a1[pe][15:0];
         always_ff @(posedge clk) PIPE_Pe_depth_a3[pe][15:0] <= PIPE_Pe_depth_a2[pe][15:0];

         // For $depth_out.
         always_ff @(posedge clk) PIPE_Pe_depth_out_a4[pe][7:0] <= PIPE_Pe_depth_out_a3[pe][7:0];

         // For $done_pix.
         always_ff @(posedge clk) PIPE_Pe_done_pix_a4[pe] <= PIPE_Pe_done_pix_a3[pe];

         // For $init_pix.
         always_ff @(posedge clk) PIPE_Pe_init_pix_a1[pe] <= PIPE_Pe_init_pix_a0[pe];
         always_ff @(posedge clk) PIPE_Pe_init_pix_a2[pe] <= PIPE_Pe_init_pix_a1[pe];
         always_ff @(posedge clk) PIPE_Pe_init_pix_a3[pe] <= PIPE_Pe_init_pix_a2[pe];
         always_ff @(posedge clk) PIPE_Pe_init_pix_a4[pe] <= PIPE_Pe_init_pix_a3[pe];

         // For $last_h.
         always_ff @(posedge clk) PIPE_Pe_last_h_a2[pe] <= PIPE_Pe_last_h_a1[pe];
         always_ff @(posedge clk) PIPE_Pe_last_h_a3[pe] <= PIPE_Pe_last_h_a2[pe];
         always_ff @(posedge clk) PIPE_Pe_last_h_a4[pe] <= PIPE_Pe_last_h_a3[pe];

         // For $last_v.
         always_ff @(posedge clk) PIPE_Pe_last_v_a2[pe] <= PIPE_Pe_last_v_a1[pe];
         always_ff @(posedge clk) PIPE_Pe_last_v_a3[pe] <= PIPE_Pe_last_v_a2[pe];
         always_ff @(posedge clk) PIPE_Pe_last_v_a4[pe] <= PIPE_Pe_last_v_a3[pe];

         // For $pix_h.
         always_ff @(posedge clk) PIPE_Pe_pix_h_a1[pe][31:0] <= PIPE_Pe_pix_h_a0[pe][31:0];
         always_ff @(posedge clk) PIPE_Pe_pix_h_a2[pe][31:0] <= PIPE_Pe_pix_h_a1[pe][31:0];

         // For $pix_v.
         always_ff @(posedge clk) PIPE_Pe_pix_v_a1[pe][31:0] <= PIPE_Pe_pix_v_a0[pe][31:0];
         always_ff @(posedge clk) PIPE_Pe_pix_v_a2[pe][31:0] <= PIPE_Pe_pix_v_a1[pe][31:0];

         // For $reset.
         always_ff @(posedge clk) PIPE_Pe_reset_a1[pe] <= PIPE_Pe_reset_a0[pe];
         always_ff @(posedge clk) PIPE_Pe_reset_a2[pe] <= PIPE_Pe_reset_a1[pe];
         always_ff @(posedge clk) PIPE_Pe_reset_a3[pe] <= PIPE_Pe_reset_a2[pe];

         // For $xx.
         always_ff @(posedge clk) PIPE_Pe_xx_a3[pe][3:-29] <= PIPE_Pe_xx_a2[pe][3:-29];

         // For $yy.
         always_ff @(posedge clk) PIPE_Pe_yy_a3[pe][3:-29] <= PIPE_Pe_yy_a2[pe][3:-29];

      end



endgenerate

